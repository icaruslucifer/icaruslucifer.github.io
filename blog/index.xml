<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on 伊卡洛斯</title>
    <link>http://39.100.101.231/blog/</link>
    <description>Recent content in Blogs on 伊卡洛斯</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 20 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://39.100.101.231/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>《穷查理宝典》摘录</title>
      <link>http://39.100.101.231/blog/qiongzhali/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>http://39.100.101.231/blog/qiongzhali/</guid>
      <description> 《穷查理宝典》摘录  正直的行为是好的，并不是因为它能带来好处；它们能够带来好处，是因为它们是好的 介绍新观念倒不是很难，难的是清楚哪些旧观念。 有些制度应该故意制定得对个体不公平，因为这样的话它们整体上对我们大家会更加公平。 如果你想要说服别人，要诉诸利益，而非诉诸理性。 在只有铁锤的人看来，每个问题都非常像一颗钉子。 一切应该尽可能简单，但不能过于简单。 祖母的规定：必须先吃完胡萝卜，然后才准吃甜点。 大公司并非总是赢家，企业变大之后，就会出现官僚机构的作风。 如果从一开始就做一些可行的事情，而不是去做一些不可行的事情，你成功的几率要大得多。 我从来不让上学影响我的学习。 库克船长让船员吃泡菜的故事。 实际上，你应该弄清楚你知道什么，不知道什么，在生活中，还有什么比这个更有用的呢？  </description>
    </item>
    
    <item>
      <title>读《月亮与六便士》有感</title>
      <link>http://39.100.101.231/blog/moonsix/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>http://39.100.101.231/blog/moonsix/</guid>
      <description> 读《月亮与六便士》有感 今年开始比较喜欢读书了，今年读的书比过去5年读的书总和还多，算是今年比较欣慰的一件事啦。 最近想开始学画画，也买了不少画画的书，偶尔画画挺有意思，没有功利性，灵魂是自由的。 碰巧的事最近买了一本《月亮与六便士》，里面的主人公就是根据与梵高齐名的画家高更的原型写的一本小说， 看了之后，写写感受。
 作者毛姆的这种叙事方法比较新奇，之前倒是没看过这种，可能是我读书少，通过道听途说加上与主角部分接触， 一步一步地把主角的慢慢刻画出来。由于并非作者亲身经历，信息就可多可少，留着不少悬念。 这本书最有名的一句评价应该是 &amp;ldquo;满地都是六便士他却抬头看月亮&amp;rdquo;。“月亮”代表的是美好的理想和不被物质世俗所羁绊的真正爱情，是诗和远方； “六便士”代表的是残酷的现实和世俗的物质，生活不止眼前的苟且，还有诗和远方。 这本书主要叙述了主人公查尔斯·斯特里克兰不惑之年， 本来事业有成，家庭和睦，子女双全，但是为了追求自己内心的绘画梦想，抛妻弃子， 离家跑到巴黎开始画画。最后去到了一座孤岛—塔希提岛，并创作了许许多多的惊世杰作， 得了麻风病，临死前创作了巨作后又摧毁。 个人觉得他比较适合在温水煮青蛙的工作的中年人，提醒他们抬头看看外面的世界，生活不只是脚下， 还有远方，青少年读不一定能有感同身受。 查尔斯·斯特里克兰的行为在真实生活中很难有人能做到，他的举止也令人不解。就算他的原型是高更，其实 高更在画画期间也是和他妻子有联络的。 主人公放弃幸福美满的生活，去画画，这个是比较好理解和接受的， 其实他可以一边做生意一边画画，也可以不抛弃妻子，不做生意，妻子做生意他画画也行，但是画画他是那么纯粹，算是抛弃了所有， 画画在他眼中应该不只是一种艺术，而是一种精神追求，一种脱离肉体的精神追求，肉体他已经不在乎了，甚至把肉体需要的必需品压缩到了极限。  </description>
    </item>
    
    <item>
      <title>ROS坑</title>
      <link>http://39.100.101.231/blog/ros_keng/</link>
      <pubDate>Thu, 30 May 2019 17:01:13 +0800</pubDate>
      
      <guid>http://39.100.101.231/blog/ros_keng/</guid>
      <description>ROS launch 文件中 param 设置的坑 launch 文件中 param 一般不需要配置类型，但所有参数值都会使用双引号包含，会自动进行类型推导，规则如下（参见 roslaunch/XML/param）
 数字带有 &amp;lsquo;.&amp;rsquo; 的是浮点数，其余是整数。 &amp;ldquo;true&amp;rdquo; 和 &amp;ldquo;false&amp;rdquo; 是布尔量，大小写不敏感。 其他所有值都认为是字符串。  其中一个坑就是，如果一个值类型本来是字符串，但是值是数字，那么会自动推导成数字，导致程序解析时无法获取到想要的字符串的问题。
解决方法，在参数属性中配置 type 字段：
 str: 字符串 int: 整形 double: 浮点 bool: 布尔量 yaml: yaml 内容  ROS 编写urdf  有时候明明代码编写没问题，但是运行之后显示“No transform form 【A】 to 【B】” 可是尝试以下方式： 这个时候需要看看是不是xml编写不规范，去一些xml格式网站把内容格式化； 安装 sudo apt-get install unicode ； 重启rviz，roscore  ROS 编译含msg的工程不通过 几种方法
 catkin_make -j1
 先单独编译msg包 catkin_make -DCATKIN_WHITELIST_PACKAGES=&amp;ldquo;beginner_tutorials&amp;rdquo;
 先单独编译msg包
  catkin_make xfuture_msgs_gencpp</description>
    </item>
    
    <item>
      <title>tensorflow-gpu 安装教程</title>
      <link>http://39.100.101.231/blog/gpu_tensorflow/</link>
      <pubDate>Thu, 30 May 2019 16:57:55 +0800</pubDate>
      
      <guid>http://39.100.101.231/blog/gpu_tensorflow/</guid>
      <description>配置如下： Ubuntu16.04 python3.5 nvidia driver GTX750 cuda 9.0 cudnn 7.1 tensorflow 1.8
 安装NVIDIA driver 查看NVIDIA driver推荐
$ ubuntu-drivers devices == /sys/devices/pci0000:00/0000:00:01.0/0000:01:00.0 == modalias : pci:v000010DEd00001C81sv00001028sd000011C0bc03sc00i00 vendor : NVIDIA Corporation model : GP107 [GeForce GTX 1050] driver : nvidia-driver-396 - third-party free recommended driver : nvidia-driver-390 - third-party free driver : xserver-xorg-video-nouveau - distro free builtin  安装：
$ sudo ubuntu-drivers autoinstall  按照推荐的驱动安装，如果失败，请添加NVIDIA driver源仓库然后在安装，安装命令如下：
$ sudo add-apt-repository ppa:graphics-drivers/ppa  测试安装是否成功</description>
    </item>
    
    <item>
      <title>TX2上安装tensorflow</title>
      <link>http://39.100.101.231/blog/tx2_tensorflow/</link>
      <pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://39.100.101.231/blog/tx2_tensorflow/</guid>
      <description>#
TX2安装tensorflow-gpu版本的坑 ###tensorflow-gpu安装
 安装tensorflow-gpu版本时，用 “sudo pip install tensorflow-gpu”命令会提示你找不到tensooflow的包，不要慌，不用担心是电脑问题，也别怀疑是系统刷机没刷好，是真的找不到，为啥我在电脑上能找到呢，那就要问nivdia。 怎么解决？ 输入这个命令就可以  pip install --extra-index-url https://developer.download.nvidia.com/compute/redist/jp33 tensorflow-gpu   具体参考 https://blog.csdn.net/zhangziju/article/details/85252474，请只看安装tensorflow的部分，安装cudnn的部分不适用。
从这个命令可以看出，nivdia帮我们做了一个在arm上的tensorflow-gpu的版本，但是是jetpack3.3的，如果你刷机刷的不是jetpack3.3，tensorflow装是装好了，但是一跑tensorflow代码就会闪退，原因是提示你cudnn的版本不对，比如jetpack3.1的cudnn的版本是7.0.4，而jetpack3.3的cudnn的版本要求是7.1.5。怎么破？
###cudnn的安装 千万别参考网上的直接去cudnn的下载区去下载，那里面下载的都是x86架构的，TX2是arm架构，无法使用，我们自己电脑上安装tensorflow-gpu版本可以去cudnn的下载区下载。
 参考https://blog.csdn.net/qq_36302589/article/details/85222876  说明一下：去自己电脑下载jetpack3.3，然后下载依赖包，把cudnn的包拷贝到tx2上，执行如下命令就ok了
sudo dpkg -i libcudnn6_6.0.21-1+cuda8.0_arm64.deb sudo dpkg -i libcudnn6-dev_6.0.21-1+cuda8.0_arm64.deb  注意点： - 自己的电脑必须是英文版的，否则nivdia不给你运行jetpack3.3 - 运行jetpack3.3的run文件，不能使用root或者sudo - 运行jetpack3.3后会弹出 conpoent mamager界面，有时候什么都没显示，别慌，等等，网络加载有点时间，等会就好了</description>
    </item>
    
    <item>
      <title>二维码识别与定位</title>
      <link>http://39.100.101.231/blog/er-wei-ma-shi-bie-yu-ding-wei/</link>
      <pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://39.100.101.231/blog/er-wei-ma-shi-bie-yu-ding-wei/</guid>
      <description>运行环境  python2.7 或 python3.6 依赖的第三方库 opencv-python numpy 安装 sudo pip install opencv-python,numpy  二维码 QRCode 主要由以下部分组成： - 1 - Position Detection Pattern：位于三个角落，可以快速检测二维码位置。 - 2 - Separators：一个单位宽的分割线，提高二维码位置检测的效率。 - 3 - Timing Pattern：黑白相间，用于修正坐标系。 - 4 - Alignment Patterns：提高二维码在失真情况下的识别率。 - 5 - Format Information：格式信息，包含了错误修正级别和掩码图案。 - 6 - Data：真正的数据部分。 - 7 - Error Correction：用于错误修正，和 Data 部分格式相同。
识别 二维码的识别主要使用第三方，目前开源的比较有名的二维码识别sdk有： zxing，zbar zxing的识别效果比zbar好，识别效果排名：微信&amp;gt;支付宝&amp;gt;zxing&amp;gt;zbar
 zxing的安装  下载地址：https://github.com/oostendo/python-zxing 下载下来之后需要再下载 jcommander-1.48.jar， 下载地址：http://mvnrepository.com/artifact/com.beust/jcommander/1.48
下载之后放在目录下： 下面需要打开init.py文件，修改里面的内容
libs = [&amp;quot;javase.jar&amp;quot;, &amp;quot;core.</description>
    </item>
    
    <item>
      <title>如鱼得水--docker&#43;pycharm搞定深度学习头疼的环境部署</title>
      <link>http://39.100.101.231/blog/docker_ai/</link>
      <pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://39.100.101.231/blog/docker_ai/</guid>
      <description>现在深度学习的框架很多，tensorflow，caffe，pytorch，mxnet，大家都在比较哪个好用，哪个好部署，tensorflow部署很方便，caffe部署坑比较多，网上都有caffe远程部署的生意做了。最近也在学习深度学习，接触docker这个东西，感觉很好用，后来看到不少也是用docker的，顺着这条路一直查找，从docker到nvidia-docker，到pytorch，再到pycharm，也有些小坑，现在总结出来提供给大家。
docker安装 docker安装建议去官网查看安装指南docker，网上有说直接通过apt-get安装的，这种方式老了，一些简单的docker可以，但是如果后面要用nvidia-docker就不要这样安装。 错误方式 apt-get -y install docker.io 正确方式 这里以ubuntu为例，去官网按照step一步一步来。 注意点： 如果按照它的安装之后，每次执行docker都需要添加sudo，这在后面通过pycharm设置docker的时候会提示没有权限，具体方法是把当前用户加入到docker用户组中，然后重启电脑。 具体操作见指南
 docker的常用命令(从别人那里copy的，多用几次就会了)  ### 显示版本信息 (与python, nvcc相比少了两个‘--’） $ docker version ### 了解当前Docker的使用状态（当前容器，镜像数目信息，存储空间占用信息， # OS内核版本， 发行版本， 硬件资源等） $ docker info ### 拉去一个镜像 ( xxxx 表示某个镜像名字，） $ docker pull xxxx # e.g. # docker pull ubuntu ### 查看系统中已有的镜像(images要带‘s&#39;) $ docker images # e.g.: # REPOSITORY TAG IMAGES ID CREATED VIRTUAL SIZE # ubuntu latest 4ef6axxxxx 5 day ago 84.</description>
    </item>
    
    <item>
      <title>快速实现人脸识别和语音播报</title>
      <link>http://39.100.101.231/blog/kuai-su-shi-xian-ren-lian-shi-bie-he-yu-yin-bo-bao/</link>
      <pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://39.100.101.231/blog/kuai-su-shi-xian-ren-lian-shi-bie-he-yu-yin-bo-bao/</guid>
      <description>主要思路是，通过opencv打开摄像头，获取图片，利用百度AI开放平台的人脸检测接口（事先会在百度后台录入人脸信息），识别出人脸信息，然后利用科大讯飞的在线语音合成接口，将识别到的内容转换成自己想要播放的音频，通过系统api播放音频。
依赖  python opencv 网络 科大讯飞接口 百度AI接口人脸识别  主要流程  打开摄像头，读取图像
cap = cv.VideoCapture(0) while(1): ret,frame = cap.read() smallImg = cv.resize(frame, (320, 240), interpolation=cv.INTER_CUBIC) cv.imshow(&amp;quot;capture&amp;quot;,smallImg)  开子线程进行图像的人脸识别
class MyFaceThread(threading.Thread): def __init__(self,token,callback): super(MyFaceThread, self).__init__() self.token=token self.callback = callback def run(self): while (1): global theImg global theResult lock.acquire() frame = theImg lock.release() if type(frame) != None: try: if frame.size &amp;gt; 0: faceResult = checkFace(self.token, frame) theResult,faceList = showCheckFace(faceResult, frame) self.callback(faceList) except: pass  其中 checkFace为检测人脸</description>
    </item>
    
    <item>
      <title>阿里云部署flask，调用tensorflow跑模型</title>
      <link>http://39.100.101.231/blog/tensorflow-flask/</link>
      <pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://39.100.101.231/blog/tensorflow-flask/</guid>
      <description>踩了坑，吐血总结
需求：通过tensorflow跑深度学习模型，得到模型文件（.pb），然后编写载入模型进行预测代码，在本地电脑测试通过后， 通过flask的web框架部署到阿里云上
  安装flask &amp;lsquo;sudo pip install flask&amp;rsquo; 安装Gunicorn &amp;lsquo;sudo pip install gunicorn&amp;rsquo; 安装nginx &amp;lsquo;sudo apt-get install nginx&amp;rsquo; 安装tensorflow &amp;lsquo;sudo pip install tensorflow&amp;rsquo;  在网上看到有些是flask+uwsgi+nginx的方式，做过尝试，结果跑tensorflow的代码，会卡在sess.run(),怀疑过是不是阿里云内存不够，也怀疑过 是不是tensorflow版本不对，最终定位是uwsgi的问题，换成gunicorn之后就ok了，这个问题折腾了1天多。
flask #main.py from flask import Flask, render_template, jsonify, request, make_response, send_from_directory, abort import config import time import os import base64 from gevent import monkey monkey.patch_all() from gevent import pywsgi import pbtest # 上传文件 @app.route(&#39;/api/up_photo&#39;, methods=[&#39;POST&#39;], strict_slashes=False) def api_upload(): file_dir = os.</description>
    </item>
    
  </channel>
</rss>